{
    "name": "@prezly/slate-commons",
    "version": "0.6.4",
    "description": "Low-level commands, utilities, plugins, types, etc. used throughout Prezly-Slate packages",
    "license": "MIT",
    "main": "build/esm/index.mjs",
    "module": "build/esm/index.mjs",
    "types": "build/types/index.d.ts",
    "exports": {
        ".": {
            "types": "./build/types/index.d.ts",
            "import": "./build/esm/index.mjs",
            "default": "./build/esm/index.mjs"
        }
    },
    "files": [
        "build",
        "src"
    ],
    "repository": {
        "type": "git",
        "url": "git+https://github.com/prezly/slate.git"
    },
    "bugs": {
        "url": "https://github.com/prezly/slate/issues"
    },
    "homepage": "https://github.com/prezly/slate#readme",
    "scripts": {
        "lint": "eslint ./src --ext=.ts,.tsx",
        "build": "npm run type-check && NODE_ENV=production npm run build:transpile",
        "build:dev": "npm run type-check && NODE_ENV=development npm run build:transpile",
        "build:transpile": "npm run build:code && npm run build:types",
        "build:types": "tsc-fancy --preserveConsoleOutput --build .",
        "build:code": "gulp build:code",
        "type-check": "tsc-fancy --preserveConsoleOutput --build .",
        "watch": "concurrently --kill-others --names 'd.ts,mjs ' 'npm run watch:types' 'npm run watch:code'",
        "watch:types": "npm run type-check -- --watch --pretty",
        "watch:code": "gulp watch:code",
        "clean": "npm run clean:build && npm run clean:node_modules",
        "clean:node_modules": "rimraf node_modules/",
        "clean:build": "rimraf build/ *.tsbuildinfo"
    },
    "peerDependencies": {
        "react": "^16.9.0",
        "slate": "^0.71.0",
        "slate-history": "^0.66.0",
        "slate-react": "^0.71.0"
    },
    "dependencies": {
        "@prezly/slate-types": "^0.6.4",
        "uuid": "^8.3.0"
    },
    "devDependencies": {
        "@prezly/slate-hyperscript": "^0.6.4",
        "@types/uuid": "^8.3.0"
    }
}
